{"ast":null,"code":"import _objectSpread from\"/Users/amitkumar/PATHfinding Visualizer/PATHFinding Visualizer/PathfindingVisualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{combineReducers}from\"redux\";var algoReducer=function algoReducer(){var algo=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"SELECT_ALGO\")return action.payload;return algo;};var diagReducer=function diagReducer(){var allowDiag=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"ALLOW_DIAG\")return action.payload;return allowDiag;};var heuristicReducer=function heuristicReducer(){var heuristic=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{1:\"manhatten\"};var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"CHANGE_HEURISTIC\")return _objectSpread(_objectSpread({},heuristic),action.payload);return heuristic;};var mazeReducer=function mazeReducer(){var maze=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"SELECT_MAZE\")return action.payload;return maze;};var animMazeReducer=function animMazeReducer(){var animMaze=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"ANIMATE_MAZE\")return action.payload;return animMaze;};var animatingReducer=function animatingReducer(){var anim=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var action=arguments.length>1?arguments[1]:undefined;if(action.type===\"SET_ANIMATING\")return action.payload;return anim;};var visitedReducer=function visitedReducer(){var visited=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"SET_VISITED\":return action.payload;default:return visited;}};var shortestReducer=function shortestReducer(){var shortest=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"SET_SHORTEST\":return action.payload;default:return shortest;}};export default combineReducers({algo:algoReducer,diag:diagReducer,heuristic:heuristicReducer,maze:mazeReducer,animMaze:animMazeReducer,anim:animatingReducer,visited:visitedReducer,shortest:shortestReducer});","map":{"version":3,"names":["combineReducers","algoReducer","algo","action","type","payload","diagReducer","allowDiag","heuristicReducer","heuristic","mazeReducer","maze","animMazeReducer","animMaze","animatingReducer","anim","visitedReducer","visited","shortestReducer","shortest","diag"],"sources":["/Users/amitkumar/PATHfinding Visualizer/PATHFinding Visualizer/PathfindingVisualizer/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\n\nconst algoReducer = (algo = 1, action) => {\n  if (action.type === \"SELECT_ALGO\") return action.payload;\n  return algo;\n};\n\nconst diagReducer = (allowDiag = false, action) => {\n  if (action.type === \"ALLOW_DIAG\") return action.payload;\n  return allowDiag;\n};\n\nconst heuristicReducer = (heuristic = { 1: \"manhatten\" }, action) => {\n  if (action.type === \"CHANGE_HEURISTIC\")\n    return { ...heuristic, ...action.payload };\n  return heuristic;\n};\n\nconst mazeReducer = (maze = 0, action) => {\n  if (action.type === \"SELECT_MAZE\") return action.payload;\n  return maze;\n};\n\nconst animMazeReducer = (animMaze = true, action) => {\n  if (action.type === \"ANIMATE_MAZE\") return action.payload;\n  return animMaze;\n};\n\nconst animatingReducer = (anim = false, action) => {\n  if (action.type === \"SET_ANIMATING\") return action.payload;\n  return anim;\n};\n\nconst visitedReducer = (visited = 0, action) => {\n  switch (action.type) {\n    case \"SET_VISITED\":\n      return action.payload;\n    default:\n      return visited;\n  }\n};\n\nconst shortestReducer = (shortest = 0, action) => {\n  switch (action.type) {\n    case \"SET_SHORTEST\":\n      return action.payload;\n    default:\n      return shortest;\n  }\n};\n\nexport default combineReducers({\n  algo: algoReducer,\n  diag: diagReducer,\n  heuristic: heuristicReducer,\n  maze: mazeReducer,\n  animMaze: animMazeReducer,\n  anim: animatingReducer,\n  visited: visitedReducer,\n  shortest: shortestReducer\n});\n"],"mappings":"6MAAA,OAASA,eAAT,KAAgC,OAAhC,CAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,EAAsB,IAArBC,KAAqB,2DAAd,CAAc,IAAXC,OAAW,2CACxC,GAAIA,MAAM,CAACC,IAAP,GAAgB,aAApB,CAAmC,MAAOD,OAAM,CAACE,OAAd,CACnC,MAAOH,KAAP,CACD,CAHD,CAKA,GAAMI,YAAW,CAAG,QAAdA,YAAc,EAA+B,IAA9BC,UAA8B,2DAAlB,KAAkB,IAAXJ,OAAW,2CACjD,GAAIA,MAAM,CAACC,IAAP,GAAgB,YAApB,CAAkC,MAAOD,OAAM,CAACE,OAAd,CAClC,MAAOE,UAAP,CACD,CAHD,CAKA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,EAA4C,IAA3CC,UAA2C,2DAA/B,CAAE,EAAG,WAAL,CAA+B,IAAXN,OAAW,2CACnE,GAAIA,MAAM,CAACC,IAAP,GAAgB,kBAApB,CACE,sCAAYK,SAAZ,EAA0BN,MAAM,CAACE,OAAjC,EACF,MAAOI,UAAP,CACD,CAJD,CAMA,GAAMC,YAAW,CAAG,QAAdA,YAAc,EAAsB,IAArBC,KAAqB,2DAAd,CAAc,IAAXR,OAAW,2CACxC,GAAIA,MAAM,CAACC,IAAP,GAAgB,aAApB,CAAmC,MAAOD,OAAM,CAACE,OAAd,CACnC,MAAOM,KAAP,CACD,CAHD,CAKA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,EAA6B,IAA5BC,SAA4B,2DAAjB,IAAiB,IAAXV,OAAW,2CACnD,GAAIA,MAAM,CAACC,IAAP,GAAgB,cAApB,CAAoC,MAAOD,OAAM,CAACE,OAAd,CACpC,MAAOQ,SAAP,CACD,CAHD,CAKA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,EAA0B,IAAzBC,KAAyB,2DAAlB,KAAkB,IAAXZ,OAAW,2CACjD,GAAIA,MAAM,CAACC,IAAP,GAAgB,eAApB,CAAqC,MAAOD,OAAM,CAACE,OAAd,CACrC,MAAOU,KAAP,CACD,CAHD,CAKA,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,EAAyB,IAAxBC,QAAwB,2DAAd,CAAc,IAAXd,OAAW,2CAC9C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,aAAL,CACE,MAAOD,OAAM,CAACE,OAAd,CACF,QACE,MAAOY,QAAP,CAJJ,CAMD,CAPD,CASA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,EAA0B,IAAzBC,SAAyB,2DAAd,CAAc,IAAXhB,OAAW,2CAChD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,cAAL,CACE,MAAOD,OAAM,CAACE,OAAd,CACF,QACE,MAAOc,SAAP,CAJJ,CAMD,CAPD,CASA,cAAenB,gBAAe,CAAC,CAC7BE,IAAI,CAAED,WADuB,CAE7BmB,IAAI,CAAEd,WAFuB,CAG7BG,SAAS,CAAED,gBAHkB,CAI7BG,IAAI,CAAED,WAJuB,CAK7BG,QAAQ,CAAED,eALmB,CAM7BG,IAAI,CAAED,gBANuB,CAO7BG,OAAO,CAAED,cAPoB,CAQ7BG,QAAQ,CAAED,eARmB,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}