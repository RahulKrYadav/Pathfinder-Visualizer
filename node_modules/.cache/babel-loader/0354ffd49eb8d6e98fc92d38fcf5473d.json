{"ast":null,"code":"var prim=function prim(grid,rows,columns){var addedWalls=[];var removedWalls=[];var open={};var frontier={};for(var i=0;i<rows;i++){for(var j=0;j<columns;j++){if(i%2===0||j%2===0){}else open[getKey(i,j)]=grid[i][j];grid[i][j].isWall=true;addedWalls.push(grid[i][j]);}}var f=[[2,0],[-2,0],[0,2],[0,-2]];var n=[[1,0],[-1,0],[0,1],[0,-1]];var start=open[randomKey(open)];grid[start.row][start.col].isWall=false;removedWalls.push(grid[start.row][start.col]);f.forEach(function(i){var r=start.row+i[0];var c=start.col+i[1];if(grid[r]&&grid[r][c]&&grid[r][c].isWall&&r!==0&&c!==0&&r!==rows-1&&c!==columns-1)frontier[getKey(r,c)]=grid[r][c];});var _loop=function _loop(){var randFKey=randomKey(frontier);var _frontier$randFKey=frontier[randFKey],row=_frontier$randFKey.row,col=_frontier$randFKey.col;var neighbours={};f.every(function(i,index){var r=row+i[0];var c=col+i[1];var wr=row+n[index][0];var wc=col+n[index][1];if(grid[r]&&grid[r][c]&&!grid[r][c].isWall){neighbours[getKey(wr,wc)]=grid[wr][wc];//return false for skew towards start\n//return false;\n}return true;});var randNeighbour=neighbours[randomKey(neighbours)];grid[randNeighbour.row][randNeighbour.col].isWall=false;grid[frontier[randFKey].row][frontier[randFKey].col].isWall=false;removedWalls.push(grid[randNeighbour.row][randNeighbour.col]);removedWalls.push(grid[frontier[randFKey].row][frontier[randFKey].col]);f.forEach(function(i){var r=frontier[randFKey].row+i[0];var c=frontier[randFKey].col+i[1];if(grid[r]&&grid[r][c]&&grid[r][c].isWall&&r!==0&&c!==0&&r!==rows-1&&c!==columns-1)frontier[getKey(r,c)]=grid[r][c];});delete frontier[randFKey];};while(Object.keys(frontier).length){_loop();}console.log(addedWalls.length);return{addedWalls:addedWalls,removedWalls:removedWalls,animAddedWalls:false};};var randomKey=function randomKey(obj){var keys=Object.keys(obj);return keys[keys.length*Math.random()<<0];};var getKey=function getKey(i,j){return i.toString()+\"-\"+j.toString();};export default prim;","map":{"version":3,"names":["prim","grid","rows","columns","addedWalls","removedWalls","open","frontier","i","j","getKey","isWall","push","f","n","start","randomKey","row","col","forEach","r","c","randFKey","neighbours","every","index","wr","wc","randNeighbour","Object","keys","length","console","log","animAddedWalls","obj","Math","random","toString"],"sources":["/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/src/mazeGen/Prim.js"],"sourcesContent":["const prim = (grid, rows, columns) => {\n  let addedWalls = [];\n  let removedWalls = [];\n  let open = {};\n  let frontier = {};\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      if (i % 2 === 0 || j % 2 === 0) {\n      } else open[getKey(i, j)] = grid[i][j];\n      grid[i][j].isWall = true;\n      addedWalls.push(grid[i][j]);\n    }\n  }\n  const f = [\n    [2, 0],\n    [-2, 0],\n    [0, 2],\n    [0, -2]\n  ];\n  const n = [\n    [1, 0],\n    [-1, 0],\n    [0, 1],\n    [0, -1]\n  ];\n  const start = open[randomKey(open)];\n  grid[start.row][start.col].isWall = false;\n  removedWalls.push(grid[start.row][start.col]);\n  f.forEach(i => {\n    const r = start.row + i[0];\n    const c = start.col + i[1];\n    if (\n      grid[r] &&\n      grid[r][c] &&\n      grid[r][c].isWall &&\n      r !== 0 &&\n      c !== 0 &&\n      r !== rows - 1 &&\n      c !== columns - 1\n    )\n      frontier[getKey(r, c)] = grid[r][c];\n  });\n\n  while (Object.keys(frontier).length) {\n    const randFKey = randomKey(frontier);\n    const { row, col } = frontier[randFKey];\n    let neighbours = {};\n    f.every((i, index) => {\n      const r = row + i[0];\n      const c = col + i[1];\n      const wr = row + n[index][0];\n      const wc = col + n[index][1];\n      if (grid[r] && grid[r][c] && !grid[r][c].isWall) {\n        neighbours[getKey(wr, wc)] = grid[wr][wc];\n        //return false for skew towards start\n        //return false;\n      }\n      return true;\n    });\n    const randNeighbour = neighbours[randomKey(neighbours)];\n    grid[randNeighbour.row][randNeighbour.col].isWall = false;\n    grid[frontier[randFKey].row][frontier[randFKey].col].isWall = false;\n    removedWalls.push(grid[randNeighbour.row][randNeighbour.col]);\n    removedWalls.push(grid[frontier[randFKey].row][frontier[randFKey].col]);\n    f.forEach(i => {\n      const r = frontier[randFKey].row + i[0];\n      const c = frontier[randFKey].col + i[1];\n      if (\n        grid[r] &&\n        grid[r][c] &&\n        grid[r][c].isWall &&\n        r !== 0 &&\n        c !== 0 &&\n        r !== rows - 1 &&\n        c !== columns - 1\n      )\n        frontier[getKey(r, c)] = grid[r][c];\n    });\n    delete frontier[randFKey];\n  }\n  console.log(addedWalls.length);\n  return { addedWalls, removedWalls, animAddedWalls: false };\n};\n\nconst randomKey = obj => {\n  var keys = Object.keys(obj);\n  return keys[(keys.length * Math.random()) << 0];\n};\n\nconst getKey = (i, j) => {\n  return i.toString() + \"-\" + j.toString();\n};\n\nexport default prim;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}