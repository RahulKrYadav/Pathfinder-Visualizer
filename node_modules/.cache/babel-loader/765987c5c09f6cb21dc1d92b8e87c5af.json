{"ast":null,"code":"import PriorityQueue from\"js-priority-queue\";var dijkstra=function dijkstra(grid,startNode,endNode,allowDiag){var visitedNodes=[];var shortestPath=[];var pq=new PriorityQueue({comparator:function comparator(a,b){return a.distance-b.distance;}});grid.forEach(function(row){return row.forEach(function(node){if(node.row===startNode.row&&node.col===startNode.column){node.distance=0;}else node.distance=Infinity;node.prevNode=null;});});pq.queue(grid[startNode.row][startNode.column]);while(pq.length){var node=pq.dequeue();var row=node.row,col=node.col;if(grid[row][col].isVisited)continue;grid[row][col].isVisited=true;visitedNodes.push(node);//if (node.distance === Infinity) break;\nvar n=[[1,0],[0,1],[-1,0],[0,-1]];//with diag\nif(allowDiag)n.push([-1,1],[1,1],[-1,-1],[1,-1]);for(var j=0;j<n.length;j++){var i=n[j];var r=row+i[0];var c=col+i[1];if(grid[r]&&grid[r][c]&&!grid[r][c].isVisited&&(!grid[r][c].isWall||r===endNode.row&&c===endNode.column)){if(r===endNode.row&&c===endNode.column){grid[r][c].isVisited=true;grid[r][c].prevNode=grid[row][col];shortestPath=getShortestPath(grid[r][c]);return{visitedNodes:visitedNodes,shortestPath:shortestPath};}var dist=Math.abs(i[0])===1&&Math.abs(i[1])===1?1.4:1;if(node.distance+dist<grid[r][c].distance){grid[r][c].prevNode=node;grid[r][c].distance=node.distance+dist;}pq.queue(grid[r][c]);}}}return{visitedNodes:visitedNodes,shortestPath:shortestPath};};var getShortestPath=function getShortestPath(node){var shortestPath=[];while(node!==null){shortestPath.unshift(node);node=node.prevNode;if(node)node.isShortestPath=true;}return shortestPath;};export default dijkstra;","map":{"version":3,"names":["PriorityQueue","dijkstra","grid","startNode","endNode","allowDiag","visitedNodes","shortestPath","pq","comparator","a","b","distance","forEach","row","node","col","column","Infinity","prevNode","queue","length","dequeue","isVisited","push","n","j","i","r","c","isWall","getShortestPath","dist","Math","abs","unshift","isShortestPath"],"sources":["/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/src/algorithms/dijkstra.js"],"sourcesContent":["import PriorityQueue from \"js-priority-queue\";\n\nconst dijkstra = (grid, startNode, endNode, allowDiag) => {\n  let visitedNodes = [];\n  let shortestPath = [];\n  let pq = new PriorityQueue({\n    comparator: function(a, b) {\n      return a.distance - b.distance;\n    }\n  });\n  grid.forEach(row =>\n    row.forEach(node => {\n      if (node.row === startNode.row && node.col === startNode.column) {\n        node.distance = 0;\n      } else node.distance = Infinity;\n      node.prevNode = null;\n    })\n  );\n  pq.queue(grid[startNode.row][startNode.column]);\n  while (pq.length) {\n    const node = pq.dequeue();\n    const { row, col } = node;\n    if (grid[row][col].isVisited) continue;\n    grid[row][col].isVisited = true;\n    visitedNodes.push(node);\n    //if (node.distance === Infinity) break;\n    const n = [\n      [1, 0],\n      [0, 1],\n      [-1, 0],\n      [0, -1]\n    ];\n    //with diag\n    if (allowDiag) n.push([-1, 1], [1, 1], [-1, -1], [1, -1]);\n    for (let j = 0; j < n.length; j++) {\n      const i = n[j];\n      const r = row + i[0];\n      const c = col + i[1];\n      if (\n        grid[r] &&\n        grid[r][c] &&\n        !grid[r][c].isVisited &&\n        (!grid[r][c].isWall || (r === endNode.row && c === endNode.column))\n      ) {\n        if (r === endNode.row && c === endNode.column) {\n          grid[r][c].isVisited = true;\n          grid[r][c].prevNode = grid[row][col];\n          shortestPath = getShortestPath(grid[r][c]);\n          return { visitedNodes, shortestPath };\n        }\n        const dist = Math.abs(i[0]) === 1 && Math.abs(i[1]) === 1 ? 1.4 : 1;\n        if (node.distance + dist < grid[r][c].distance) {\n          grid[r][c].prevNode = node;\n          grid[r][c].distance = node.distance + dist;\n        }\n        pq.queue(grid[r][c]);\n      }\n    }\n  }\n  return { visitedNodes, shortestPath };\n};\n\nconst getShortestPath = node => {\n  let shortestPath = [];\n  while (node !== null) {\n    shortestPath.unshift(node);\n    node = node.prevNode;\n    if (node) node.isShortestPath = true;\n  }\n  return shortestPath;\n};\n\nexport default dijkstra;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}