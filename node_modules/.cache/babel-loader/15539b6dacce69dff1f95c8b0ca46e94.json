{"ast":null,"code":"var HORIZONTAL=\"horizontal\";var VERTICAL=\"vertical\";var addedWalls=[];var removedWalls=[];var recursiveDivision=function recursiveDivision(grid,rows,columns){addedWalls=[];removedWalls=[];for(var i=0;i<rows;i++){grid[i][0].isWall=true;grid[rows-i-1][columns-1].isWall=true;addedWalls.push(grid[i][0]);addedWalls.push(grid[rows-i-1][columns-1]);}for(var j=0;j<columns;j++){grid[0][columns-j-1].isWall=true;grid[rows-1][j].isWall=true;addedWalls.push(grid[0][columns-j-1]);addedWalls.push(grid[rows-1][j]);}var width=columns;var height=rows;divide(grid,0,0,width,height,chooseOrientation(width,height));return{addedWalls:addedWalls,removedWalls:removedWalls,animAddedWalls:true};};var divide=function divide(grid,x,y,width,height,orientation){if(height<2&&width<2)return;var horizontal=orientation===HORIZONTAL;var wx=x+(horizontal?randEven(height-2):0);var wy=y+(horizontal?0:randEven(width-2));var px=wx+(horizontal?0:randOdd(height));var py=wy+(horizontal?randOdd(width):0);var dx=horizontal?0:1;var dy=horizontal?1:0;do{if(wx!==px||wy!==py){grid[wx][wy].isWall=true;addedWalls.push(grid[wx][wy]);}wx+=dx;wy+=dy;}while(grid[wx][wy].isWall!==true);var nx=x;var ny=y;var w=horizontal?width:wy-y;var h=horizontal?wx-x:height;divide(grid,nx,ny,w,h,chooseOrientation(w,h));ny=horizontal?y:wy;nx=horizontal?wx:x;w=horizontal?width:y+width-wy-1;h=horizontal?x+height-wx-1:height;divide(grid,nx,ny,w,h,chooseOrientation(w,h));};var chooseOrientation=function chooseOrientation(width,height){if(width<height)return HORIZONTAL;else if(width>height)return VERTICAL;return Math.random()>=0.5?HORIZONTAL:VERTICAL;};var randEven=function randEven(i){return Math.floor(randomNumber(i,2)/2)*2;};var randOdd=function randOdd(i){return Math.floor(Math.random()*(i/2))*2+1;};var randomNumber=function randomNumber(max,min){return Math.floor(Math.random()*(max-min+1)+min);};export default recursiveDivision;","map":{"version":3,"names":["HORIZONTAL","VERTICAL","addedWalls","removedWalls","recursiveDivision","grid","rows","columns","i","isWall","push","j","width","height","divide","chooseOrientation","animAddedWalls","x","y","orientation","horizontal","wx","randEven","wy","px","randOdd","py","dx","dy","nx","ny","w","h","Math","random","floor","randomNumber","max","min"],"sources":["/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/src/mazeGen/recursiveDivison.js"],"sourcesContent":["const HORIZONTAL = \"horizontal\";\nconst VERTICAL = \"vertical\";\nlet addedWalls = [];\nlet removedWalls = [];\nconst recursiveDivision = (grid, rows, columns) => {\n  addedWalls = [];\n  removedWalls = [];\n  for (let i = 0; i < rows; i++) {\n    grid[i][0].isWall = true;\n    grid[rows - i - 1][columns - 1].isWall = true;\n    addedWalls.push(grid[i][0]);\n    addedWalls.push(grid[rows - i - 1][columns - 1]);\n  }\n  for (let j = 0; j < columns; j++) {\n    grid[0][columns - j - 1].isWall = true;\n    grid[rows - 1][j].isWall = true;\n    addedWalls.push(grid[0][columns - j - 1]);\n    addedWalls.push(grid[rows - 1][j]);\n  }\n  const width = columns;\n  const height = rows;\n  divide(grid, 0, 0, width, height, chooseOrientation(width, height));\n\n  return { addedWalls, removedWalls, animAddedWalls: true };\n};\n\nconst divide = (grid, x, y, width, height, orientation) => {\n  if (height < 2 && width < 2) return;\n  const horizontal = orientation === HORIZONTAL;\n  let wx = x + (horizontal ? randEven(height - 2) : 0);\n  let wy = y + (horizontal ? 0 : randEven(width - 2));\n  const px = wx + (horizontal ? 0 : randOdd(height));\n  const py = wy + (horizontal ? randOdd(width) : 0);\n  const dx = horizontal ? 0 : 1;\n  const dy = horizontal ? 1 : 0;\n  do {\n    if (wx !== px || wy !== py) {\n      grid[wx][wy].isWall = true;\n      addedWalls.push(grid[wx][wy]);\n    }\n    wx += dx;\n    wy += dy;\n  } while (grid[wx][wy].isWall !== true);\n  let nx = x;\n  let ny = y;\n  let w = horizontal ? width : wy - y;\n  let h = horizontal ? wx - x : height;\n  divide(grid, nx, ny, w, h, chooseOrientation(w, h));\n  ny = horizontal ? y : wy;\n  nx = horizontal ? wx : x;\n  w = horizontal ? width : y + width - wy - 1;\n  h = horizontal ? x + height - wx - 1 : height;\n  divide(grid, nx, ny, w, h, chooseOrientation(w, h));\n};\n\nconst chooseOrientation = (width, height) => {\n  if (width < height) return HORIZONTAL;\n  else if (width > height) return VERTICAL;\n  return Math.random() >= 0.5 ? HORIZONTAL : VERTICAL;\n};\n\nconst randEven = i => {\n  return Math.floor(randomNumber(i, 2) / 2) * 2;\n};\nconst randOdd = i => {\n  return Math.floor(Math.random() * (i / 2)) * 2 + 1;\n};\n\nconst randomNumber = (max, min) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport default recursiveDivision;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}