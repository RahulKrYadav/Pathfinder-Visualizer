{"ast":null,"code":"import { combineReducers } from \"redux\";\n\nconst algoReducer = function () {\n  let algo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"SELECT_ALGO\") return action.payload;\n  return algo;\n};\n\nconst diagReducer = function () {\n  let allowDiag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"ALLOW_DIAG\") return action.payload;\n  return allowDiag;\n};\n\nconst heuristicReducer = function () {\n  let heuristic = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    1: \"manhatten\"\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"CHANGE_HEURISTIC\") return { ...heuristic,\n    ...action.payload\n  };\n  return heuristic;\n};\n\nconst mazeReducer = function () {\n  let maze = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"SELECT_MAZE\") return action.payload;\n  return maze;\n};\n\nconst animMazeReducer = function () {\n  let animMaze = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"ANIMATE_MAZE\") return action.payload;\n  return animMaze;\n};\n\nconst animatingReducer = function () {\n  let anim = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"SET_ANIMATING\") return action.payload;\n  return anim;\n};\n\nconst visitedReducer = function () {\n  let visited = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_VISITED\":\n      return action.payload;\n\n    default:\n      return visited;\n  }\n};\n\nconst shortestReducer = function () {\n  let shortest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_SHORTEST\":\n      return action.payload;\n\n    default:\n      return shortest;\n  }\n};\n\nexport default combineReducers({\n  algo: algoReducer,\n  diag: diagReducer,\n  heuristic: heuristicReducer,\n  maze: mazeReducer,\n  animMaze: animMazeReducer,\n  anim: animatingReducer,\n  visited: visitedReducer,\n  shortest: shortestReducer\n});","map":{"version":3,"names":["combineReducers","algoReducer","algo","action","type","payload","diagReducer","allowDiag","heuristicReducer","heuristic","mazeReducer","maze","animMazeReducer","animMaze","animatingReducer","anim","visitedReducer","visited","shortestReducer","shortest","diag"],"sources":["/Users/amitkumar/PATHfinding Visualizer/PATHFinding Visualizer/PathfindingVisualizer/src/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\n\nconst algoReducer = (algo = 1, action) => {\n  if (action.type === \"SELECT_ALGO\") return action.payload;\n  return algo;\n};\n\nconst diagReducer = (allowDiag = false, action) => {\n  if (action.type === \"ALLOW_DIAG\") return action.payload;\n  return allowDiag;\n};\n\nconst heuristicReducer = (heuristic = { 1: \"manhatten\" }, action) => {\n  if (action.type === \"CHANGE_HEURISTIC\")\n    return { ...heuristic, ...action.payload };\n  return heuristic;\n};\n\nconst mazeReducer = (maze = 0, action) => {\n  if (action.type === \"SELECT_MAZE\") return action.payload;\n  return maze;\n};\n\nconst animMazeReducer = (animMaze = true, action) => {\n  if (action.type === \"ANIMATE_MAZE\") return action.payload;\n  return animMaze;\n};\n\nconst animatingReducer = (anim = false, action) => {\n  if (action.type === \"SET_ANIMATING\") return action.payload;\n  return anim;\n};\n\nconst visitedReducer = (visited = 0, action) => {\n  switch (action.type) {\n    case \"SET_VISITED\":\n      return action.payload;\n    default:\n      return visited;\n  }\n};\n\nconst shortestReducer = (shortest = 0, action) => {\n  switch (action.type) {\n    case \"SET_SHORTEST\":\n      return action.payload;\n    default:\n      return shortest;\n  }\n};\n\nexport default combineReducers({\n  algo: algoReducer,\n  diag: diagReducer,\n  heuristic: heuristicReducer,\n  maze: mazeReducer,\n  animMaze: animMazeReducer,\n  anim: animatingReducer,\n  visited: visitedReducer,\n  shortest: shortestReducer\n});\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,YAAsB;EAAA,IAArBC,IAAqB,uEAAd,CAAc;EAAA,IAAXC,MAAW;EACxC,IAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC,OAAOD,MAAM,CAACE,OAAd;EACnC,OAAOH,IAAP;AACD,CAHD;;AAKA,MAAMI,WAAW,GAAG,YAA+B;EAAA,IAA9BC,SAA8B,uEAAlB,KAAkB;EAAA,IAAXJ,MAAW;EACjD,IAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC,OAAOD,MAAM,CAACE,OAAd;EAClC,OAAOE,SAAP;AACD,CAHD;;AAKA,MAAMC,gBAAgB,GAAG,YAA4C;EAAA,IAA3CC,SAA2C,uEAA/B;IAAE,GAAG;EAAL,CAA+B;EAAA,IAAXN,MAAW;EACnE,IAAIA,MAAM,CAACC,IAAP,KAAgB,kBAApB,EACE,OAAO,EAAE,GAAGK,SAAL;IAAgB,GAAGN,MAAM,CAACE;EAA1B,CAAP;EACF,OAAOI,SAAP;AACD,CAJD;;AAMA,MAAMC,WAAW,GAAG,YAAsB;EAAA,IAArBC,IAAqB,uEAAd,CAAc;EAAA,IAAXR,MAAW;EACxC,IAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC,OAAOD,MAAM,CAACE,OAAd;EACnC,OAAOM,IAAP;AACD,CAHD;;AAKA,MAAMC,eAAe,GAAG,YAA6B;EAAA,IAA5BC,QAA4B,uEAAjB,IAAiB;EAAA,IAAXV,MAAW;EACnD,IAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC,OAAOD,MAAM,CAACE,OAAd;EACpC,OAAOQ,QAAP;AACD,CAHD;;AAKA,MAAMC,gBAAgB,GAAG,YAA0B;EAAA,IAAzBC,IAAyB,uEAAlB,KAAkB;EAAA,IAAXZ,MAAW;EACjD,IAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC,OAAOD,MAAM,CAACE,OAAd;EACrC,OAAOU,IAAP;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAG,YAAyB;EAAA,IAAxBC,OAAwB,uEAAd,CAAc;EAAA,IAAXd,MAAW;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,aAAL;MACE,OAAOD,MAAM,CAACE,OAAd;;IACF;MACE,OAAOY,OAAP;EAJJ;AAMD,CAPD;;AASA,MAAMC,eAAe,GAAG,YAA0B;EAAA,IAAzBC,QAAyB,uEAAd,CAAc;EAAA,IAAXhB,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,cAAL;MACE,OAAOD,MAAM,CAACE,OAAd;;IACF;MACE,OAAOc,QAAP;EAJJ;AAMD,CAPD;;AASA,eAAenB,eAAe,CAAC;EAC7BE,IAAI,EAAED,WADuB;EAE7BmB,IAAI,EAAEd,WAFuB;EAG7BG,SAAS,EAAED,gBAHkB;EAI7BG,IAAI,EAAED,WAJuB;EAK7BG,QAAQ,EAAED,eALmB;EAM7BG,IAAI,EAAED,gBANuB;EAO7BG,OAAO,EAAED,cAPoB;EAQ7BG,QAAQ,EAAED;AARmB,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}