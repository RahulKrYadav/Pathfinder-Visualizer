{"ast":null,"code":"import _regeneratorRuntime from\"/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import Node from\"./Node\";import dijkstra from\"../algorithms/dijkstra\";import astar from\"../algorithms/astar\";import jumpPointSearch from\"../algorithms/jumpPointSearch\";import kruskal from\"../mazeGen/kruskall\";import recursiveDivision from\"../mazeGen/recursiveDivison\";import prim from\"../mazeGen/Prim\";import Card from\"@material-ui/core/Card\";import{withStyles}from\"@material-ui/core/styles\";import{connect}from\"react-redux\";import{setAnimating,setVisited,setShortest}from\"../actions\";import{jsx as _jsx}from\"react/jsx-runtime\";var startNode={row:20,column:4};var endNode={row:20,column:27};var selectStart=false;var selectEnd=false;var selectWall=false;var selectRemoveWall=false;var isAnimated=false;var startNodeClass=\"start-node\";var endNodeClass=\"end-node\";var wallClass=\"wall\";var GridContainer=withStyles({root:{width:\"100%\",padding:\"1vw\",marginRight:\"1vw\"}})(Card);var TGrid=/*#__PURE__*/function(_React$Component){_inherits(TGrid,_React$Component);var _super=_createSuper(TGrid);function TGrid(props){var _this;_classCallCheck(this,TGrid);_this=_super.call(this,props);_this.nodes=function(){var nodes=[];for(var i=0;i<_this.props.rows;i++){var nodeRow=[];for(var j=0;j<_this.props.columns;j++){nodeRow.push(/*#__PURE__*/_jsx(Node,{startNodeClass:startNodeClass,endNodeClass:endNodeClass,wallClass:wallClass,row:_this.state.grid[i][j].row,column:_this.state.grid[i][j].col,isStart:_this.state.grid[i][j].isStart,isEnd:_this.state.grid[i][j].isEnd,isVisited:_this.state.grid[i][j].isVisited,isWall:_this.state.grid[i][j].isWall,isShortestPath:_this.state.grid[i][j].isShortestPath,onMouseClick:_this.onMouseClick,onMouseEnterAndLeave:_this.onMouseEnterAndLeave,ref:_this.nodeRefs[i][j]},i.toString()+\"-\"+j.toString()));}nodes.push(/*#__PURE__*/_jsx(\"tr\",{children:nodeRow},i));}return nodes;};_this.setGrid=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var grid,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:grid=_args.length>0&&_args[0]!==undefined?_args[0]:_this.getInitGrid();if(selectEnd){selectEnd=false;_this.changeGridEndNode(endNode.row,endNode.column,grid);}if(selectStart){selectStart=false;_this.changeGridStartNode(startNode.row,startNode.column,grid);}if(!selectWall){_context.next=7;break;}selectWall=false;_context.next=7;return _this.setState({});case 7:_this.setState({grid:grid});case 8:case\"end\":return _context.stop();}}},_callee);}));_this.getInitGrid=function(){var grid=[];for(var i=0;i<_this.props.rows;i++){var row=[];for(var j=0;j<_this.props.columns;j++){row.push(_this.getNode(i,j));}grid.push(row);}return grid;};_this.getNode=function(row,col){return{row:row,col:col,isStart:row===startNode.row&&col===startNode.column,isEnd:row===endNode.row&&col===endNode.column,isVisited:false,isShortestPath:false,isWall:false};};_this.onMouseClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(row,column){var grid,_grid;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!_this.props.anim){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:if(!selectStart){_context2.next=6;break;}if(row!==endNode.row||column!==endNode.column){selectStart=false;_this.changeGridStartNode(row,column);}_context2.next=45;break;case 6:if(!(row===startNode.row&&column===startNode.column&&!selectEnd)){_context2.next=11;break;}selectStart=true;if(_this.state.grid[row][column].isWall)_this.nodeRefs[row][column].current.classList.add(wallClass);_context2.next=45;break;case 11:if(!selectEnd){_context2.next=15;break;}if(row!==startNode.row||column!==startNode.column){selectEnd=false;_this.changeGridEndNode(row,column);}_context2.next=45;break;case 15:if(!(row===endNode.row&&column===endNode.column&&!selectStart)){_context2.next=20;break;}selectEnd=true;if(_this.state.grid[row][column].isWall)_this.nodeRefs[row][column].current.classList.add(wallClass);_context2.next=45;break;case 20:if(!selectWall){_context2.next=26;break;}selectWall=false;_context2.next=24;return _this.setGrid(_this.state.grid);case 24:_context2.next=45;break;case 26:if(!_this.state.grid[row][column].isWall){_context2.next=34;break;}selectRemoveWall=true;_this.nodeRefs[row][column].current.classList.remove(wallClass);grid=_this.state.grid;grid[row][column].isWall=false;if(isAnimated)_this.visualizeRealTime(startNode,endNode);_context2.next=45;break;case 34:if(!selectRemoveWall){_context2.next=40;break;}selectRemoveWall=false;_context2.next=38;return _this.setGrid(_this.state.grid);case 38:_context2.next=45;break;case 40:selectWall=true;_this.nodeRefs[row][column].current.classList.add(wallClass);_grid=_this.state.grid;_grid[row][column].isWall=true;if(isAnimated)_this.visualizeRealTime(startNode,endNode);case 45:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}();_this.onMouseEnterAndLeave=function(row,column){//Just changing the class using refs.\nif(selectStart){if(row!==endNode.row||column!==endNode.column){_this.nodeRefs[row][column].current.classList.toggle(startNodeClass);if(isAnimated)_this.visualizeRealTime({row:row,column:column},endNode);}}else if(selectEnd){if(row!==startNode.row||column!==startNode.column){_this.nodeRefs[row][column].current.classList.toggle(endNodeClass);if(isAnimated)_this.visualizeRealTime(startNode,{row:row,column:column});}}else if(selectWall){if((row!==endNode.row||column!==endNode.column)&&(row!==startNode.row||column!==startNode.column)){_this.nodeRefs[row][column].current.classList.add(wallClass);var grid=_this.state.grid;grid[row][column].isWall=true;if(isAnimated)_this.visualizeRealTime(startNode,endNode);}}else if(selectRemoveWall){if((row!==endNode.row||column!==endNode.column)&&(row!==startNode.row||column!==startNode.column)){_this.nodeRefs[row][column].current.classList.remove(wallClass);var _grid2=_this.state.grid;_grid2[row][column].isWall=false;if(isAnimated)_this.visualizeRealTime(startNode,endNode);}}};_this.getRefs=function(){var refs=[];for(var i=0;i<_this.props.rows;i++){var rowRef=[];for(var j=0;j<_this.props.columns;j++){rowRef.push(/*#__PURE__*/React.createRef());}refs.push(rowRef);}return refs;};_this.changeGridStartNode=function(row,column){var grid=arguments.length>2&&arguments[2]!==undefined?arguments[2]:_this.state.grid;grid[startNode.row][startNode.column].isStart=false;startNode={row:row,column:column};grid[startNode.row][startNode.column].isStart=true;_this.nodeRefs[row][column].current.classList.add(startNodeClass);_this.setGrid(grid);};_this.changeGridEndNode=function(row,column){var grid=arguments.length>2&&arguments[2]!==undefined?arguments[2]:_this.state.grid;grid[endNode.row][endNode.column].isEnd=false;endNode={row:row,column:column};grid[endNode.row][endNode.column].isEnd=true;_this.nodeRefs[row][column].current.classList.add(endNodeClass);_this.setGrid(grid);};_this.clearVisited=function(grid){_this.props.setVisited(0);_this.props.setShortest(0);grid.forEach(function(row){return row.forEach(function(node){node.isShortestPath=false;node.isVisited=false;_this.nodeRefs[node.row][node.col].current.classList.remove(\"visited\");_this.nodeRefs[node.row][node.col].current.classList.remove(\"shortest-path\");_this.nodeRefs[node.row][node.col].current.classList.remove(\"visited-anim\");_this.nodeRefs[node.row][node.col].current.classList.remove(\"shortest-path-anim\");});});};_this.clearGrid=function(){isAnimated=false;_this.props.setVisited(0);_this.props.setShortest(0);_this.setGrid();};_this.visualize=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var grid,response,visitedNodes,shortestPath;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this.props.setAnimating(true);grid=_this.state.grid;_context3.next=4;return _this.setGrid(grid);case 4:_this.clearVisited(grid);_context3.next=7;return _this.getResponseFromAlgo(grid,startNode,endNode);case 7:response=_context3.sent;visitedNodes=response.visitedNodes,shortestPath=response.shortestPath;visitedNodes.shift();shortestPath.shift();shortestPath.pop();if(!(visitedNodes.length===0&&shortestPath.length===0)){_context3.next=16;break;}_this.props.setAnimating(false);_this.setGrid(grid);return _context3.abrupt(\"return\");case 16:_this.animate(visitedNodes,shortestPath,grid);case 17:case\"end\":return _context3.stop();}}},_callee3);}));_this.getResponseFromAlgo=function(grid,sn,en){var response;switch(_this.props.algo){case 0:response=dijkstra(grid,sn,en,_this.props.diag);break;case 1:response=astar(grid,sn,en,_this.props.heuristic[1],_this.props.diag);break;case 2:response=jumpPointSearch(grid,sn,en);break;default:break;}return response;};_this.animate=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(visitedNodes,shortestPath,grid){var i,j,animateVisitedNodes,animateShortestPath;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:i=0,j=0;animateVisitedNodes=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var _visitedNodes$i,row,col;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(i===visitedNodes.length)){_context4.next=3;break;}if(shortestPath.length)requestAnimationFrame(animateShortestPath);else{isAnimated=true;_this.props.setAnimating(false);_this.setGrid(grid);}return _context4.abrupt(\"return\");case 3:_visitedNodes$i=visitedNodes[i],row=_visitedNodes$i.row,col=_visitedNodes$i.col;_this.nodeRefs[row][col].current.classList.add(\"visited-anim\");++i;_this.props.setVisited(i);requestAnimationFrame(animateVisitedNodes);case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function animateVisitedNodes(){return _ref5.apply(this,arguments);};}();animateShortestPath=function animateShortestPath(){if(j===shortestPath.length){isAnimated=true;_this.props.setAnimating(false);_this.setGrid(grid);return;}var _shortestPath$j=shortestPath[j],row=_shortestPath$j.row,col=_shortestPath$j.col;_this.nodeRefs[row][col].current.classList.add(\"shortest-path-anim\");++j;_this.props.setShortest(j);requestAnimationFrame(animateShortestPath);};_context5.next=5;return requestAnimationFrame(animateVisitedNodes);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x3,_x4,_x5){return _ref4.apply(this,arguments);};}();_this.visualizeRealTime=function(sn,en){var grid=_this.state.grid;_this.clearVisited(grid);var _this$getResponseFrom=_this.getResponseFromAlgo(grid,sn,en),visitedNodes=_this$getResponseFrom.visitedNodes,shortestPath=_this$getResponseFrom.shortestPath;_this.props.setVisited(visitedNodes.length);_this.props.setShortest(shortestPath.length);visitedNodes.shift();shortestPath.shift();shortestPath.pop();visitedNodes.forEach(function(node){_this.nodeRefs[node.row][node.col].current.classList.add(\"visited\");});shortestPath.forEach(function(node){_this.nodeRefs[node.row][node.col].current.classList.add(\"shortest-path\");});return{visitedNodes:visitedNodes,shortestPath:shortestPath};};_this.visualizeMaze=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var grid,_this$getResponseFrom2,addedWalls,removedWalls,animAddedWalls;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return _this.clearGrid();case 2:grid=_this.state.grid;if(_this.props.animMaze){_context6.next=9;break;}_this.getResponseFromMaze(grid,_this.props.maze);_context6.next=7;return _this.setGrid(grid);case 7:_context6.next=14;break;case 9:_this.props.setAnimating(true);_context6.next=12;return _this.setGrid(grid);case 12:_this$getResponseFrom2=_this.getResponseFromMaze(grid),addedWalls=_this$getResponseFrom2.addedWalls,removedWalls=_this$getResponseFrom2.removedWalls,animAddedWalls=_this$getResponseFrom2.animAddedWalls;_this.animateMaze(addedWalls,removedWalls,grid,animAddedWalls);case 14:case\"end\":return _context6.stop();}}},_callee6);}));_this.getResponseFromMaze=function(grid){switch(_this.props.maze){case 0:return kruskal(grid,_this.props.rows,_this.props.columns);case 1:return prim(grid,_this.props.rows,_this.props.columns);case 2:return recursiveDivision(grid,_this.props.rows,_this.props.columns);default:break;}};_this.animateMaze=function(addedWalls,removedWalls,grid,animAddedWalls){var i=0;var animateAddedWalls=function animateAddedWalls(){if(i===addedWalls.length){if(removedWalls.length)requestAnimationFrame(animateRemovedWalls);else{_this.props.setAnimating(false);_this.setGrid(grid);}return;}var _addedWalls$i=addedWalls[i],row=_addedWalls$i.row,col=_addedWalls$i.col;_this.nodeRefs[row][col].current.classList.add(wallClass);++i;requestAnimationFrame(animateAddedWalls);};var j=0;var animateRemovedWalls=function animateRemovedWalls(){if(j===removedWalls.length){_this.props.setAnimating(false);_this.setGrid(grid);return;}var _removedWalls$j=removedWalls[j],row=_removedWalls$j.row,col=_removedWalls$j.col;_this.nodeRefs[row][col].current.classList.remove(wallClass);++j;requestAnimationFrame(animateRemovedWalls);};var showAddedWalls=function showAddedWalls(){addedWalls.forEach(function(node){return _this.nodeRefs[node.row][node.col].current.classList.add(wallClass);});};if(animAddedWalls){requestAnimationFrame(animateAddedWalls);}else{showAddedWalls();requestAnimationFrame(animateRemovedWalls);}};_this.state={grid:[]};_this.nodeRefs=_this.getRefs();_this.gridRef=/*#__PURE__*/React.createRef();return _this;}_createClass(TGrid,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var _this2=this;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return this.setGrid();case 2:this.gridRef.current.style.height=\"\".concat(this.gridRef.current.offsetWidth/this.props.columns*this.props.rows,\"px\");window.addEventListener(\"resize\",function(e){_this2.gridRef.current.style.height=\"\".concat(_this2.gridRef.current.offsetWidth/_this2.props.columns*_this2.props.rows,\"px\");});case 4:case\"end\":return _context7.stop();}}},_callee7,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){if(isAnimated){var response=this.visualizeRealTime(startNode,endNode);this.props.setVisited(response.visitedNodes.length);this.props.setShortest(response.shortestPath.length);}if(this.state.grid.length===0)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsx(GridContainer,{ref:this.gridRef,children:/*#__PURE__*/_jsx(\"table\",{className:\"grid\",children:/*#__PURE__*/_jsx(\"tbody\",{children:this.nodes()})})});}}]);return TGrid;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{algo:state.algo,diag:state.diag,heuristic:state.heuristic,maze:state.maze,animMaze:state.animMaze,anim:state.anim};};export default connect(mapStateToProps,{setAnimating:setAnimating,setVisited:setVisited,setShortest:setShortest},null,{forwardRef:true})(TGrid);","map":{"version":3,"names":["React","Node","dijkstra","astar","jumpPointSearch","kruskal","recursiveDivision","prim","Card","withStyles","connect","setAnimating","setVisited","setShortest","startNode","row","column","endNode","selectStart","selectEnd","selectWall","selectRemoveWall","isAnimated","startNodeClass","endNodeClass","wallClass","GridContainer","root","width","padding","marginRight","TGrid","props","nodes","i","rows","nodeRow","j","columns","push","state","grid","col","isStart","isEnd","isVisited","isWall","isShortestPath","onMouseClick","onMouseEnterAndLeave","nodeRefs","toString","setGrid","getInitGrid","changeGridEndNode","changeGridStartNode","setState","getNode","anim","current","classList","add","remove","visualizeRealTime","toggle","getRefs","refs","rowRef","createRef","clearVisited","forEach","node","clearGrid","visualize","getResponseFromAlgo","response","visitedNodes","shortestPath","shift","pop","length","animate","sn","en","algo","diag","heuristic","animateVisitedNodes","requestAnimationFrame","animateShortestPath","visualizeMaze","animMaze","getResponseFromMaze","maze","addedWalls","removedWalls","animAddedWalls","animateMaze","animateAddedWalls","animateRemovedWalls","showAddedWalls","gridRef","style","height","offsetWidth","window","addEventListener","e","Component","mapStateToProps","forwardRef"],"sources":["/Users/amitkumar/Documents/RKY/PROJECTS/PATHFIND-1/src/components/Grid.js"],"sourcesContent":["import React from \"react\";\nimport Node from \"./Node\";\nimport dijkstra from \"../algorithms/dijkstra\";\nimport astar from \"../algorithms/astar\";\nimport jumpPointSearch from \"../algorithms/jumpPointSearch\";\nimport kruskal from \"../mazeGen/kruskall\";\nimport recursiveDivision from \"../mazeGen/recursiveDivison\";\nimport prim from \"../mazeGen/Prim\";\nimport Card from \"@material-ui/core/Card\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { setAnimating, setVisited, setShortest } from \"../actions\";\n\n\n\nlet startNode = { row: 20, column: 4 };\nlet endNode = { row: 20, column: 27 };\nlet selectStart = false;\nlet selectEnd = false;\nlet selectWall = false;\nlet selectRemoveWall = false;\nlet isAnimated = false;\n\nconst startNodeClass = \"start-node\";\n\nconst endNodeClass = \"end-node\";\nconst wallClass = \"wall\";\n\nconst GridContainer = withStyles({\n  root: {\n    width: \"100%\",\n    padding: \"1vw\",\n    marginRight: \"1vw\"\n  }\n})(Card);\n\nclass TGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: []\n    };\n    this.nodeRefs = this.getRefs();\n    this.gridRef = React.createRef();\n  }\n  async componentDidMount() {\n    await this.setGrid();\n    this.gridRef.current.style.height = `${(this.gridRef.current.offsetWidth /\n      this.props.columns) *\n      this.props.rows}px`;\n    window.addEventListener(\"resize\", e => {\n      this.gridRef.current.style.height = `${(this.gridRef.current.offsetWidth /\n        this.props.columns) *\n        this.props.rows}px`;\n    });\n  }\n\n  render() {\n    if (isAnimated) {\n      const response = this.visualizeRealTime(startNode, endNode);\n      this.props.setVisited(response.visitedNodes.length);\n      this.props.setShortest(response.shortestPath.length);\n    }\n    if (this.state.grid.length === 0) return <div>Loading...</div>;\n    return (\n      <GridContainer ref={this.gridRef}>\n        <table className=\"grid\">\n          <tbody>{this.nodes()}</tbody>\n        </table>\n      </GridContainer>\n    );\n  }\n\n  nodes = () => {\n    let nodes = [];\n    for (let i = 0; i < this.props.rows; i++) {\n      let nodeRow = [];\n      for (let j = 0; j < this.props.columns; j++)\n        nodeRow.push(\n          <Node\n            key={i.toString() + \"-\" + j.toString()}\n            startNodeClass={startNodeClass}\n            endNodeClass={endNodeClass}\n            wallClass={wallClass}\n            row={this.state.grid[i][j].row}\n            column={this.state.grid[i][j].col}\n            isStart={this.state.grid[i][j].isStart}\n            isEnd={this.state.grid[i][j].isEnd}\n            isVisited={this.state.grid[i][j].isVisited}\n            isWall={this.state.grid[i][j].isWall}\n            isShortestPath={this.state.grid[i][j].isShortestPath}\n            onMouseClick={this.onMouseClick}\n            onMouseEnterAndLeave={this.onMouseEnterAndLeave}\n            ref={this.nodeRefs[i][j]}\n          />\n        );\n      nodes.push(<tr key={i}>{nodeRow}</tr>);\n    }\n    return nodes;\n  };\n  setGrid = async (grid = this.getInitGrid()) => {\n    if (selectEnd) {\n      selectEnd = false;\n      this.changeGridEndNode(endNode.row, endNode.column, grid);\n    }\n    if (selectStart) {\n      selectStart = false;\n      this.changeGridStartNode(startNode.row, startNode.column, grid);\n    }\n    if (selectWall) {\n      selectWall = false;\n      await this.setState({});\n    }\n    this.setState({ grid });\n  };\n\n  getInitGrid = () => {\n    let grid = [];\n    for (let i = 0; i < this.props.rows; i++) {\n      let row = [];\n      for (let j = 0; j < this.props.columns; j++) row.push(this.getNode(i, j));\n      grid.push(row);\n    }\n    return grid;\n  };\n  getNode = (row, col) => {\n    return {\n      row,\n      col,\n      isStart: row === startNode.row && col === startNode.column,\n      isEnd: row === endNode.row && col === endNode.column,\n      isVisited: false,\n      isShortestPath: false,\n      isWall: false\n    };\n  };\n  onMouseClick = async (row, column) => {\n    if (this.props.anim) return;\n    if (selectStart) {\n      if (row !== endNode.row || column !== endNode.column) {\n        selectStart = false;\n        this.changeGridStartNode(row, column);\n      }\n    } else if (\n      row === startNode.row &&\n      column === startNode.column &&\n      !selectEnd\n    ) {\n      selectStart = true;\n      if (this.state.grid[row][column].isWall)\n        this.nodeRefs[row][column].current.classList.add(wallClass);\n    } else if (selectEnd) {\n      if (row !== startNode.row || column !== startNode.column) {\n        selectEnd = false;\n        this.changeGridEndNode(row, column);\n      }\n    } else if (\n      row === endNode.row &&\n      column === endNode.column &&\n      !selectStart\n    ) {\n      selectEnd = true;\n      if (this.state.grid[row][column].isWall)\n        this.nodeRefs[row][column].current.classList.add(wallClass);\n    } else if (selectWall) {\n      selectWall = false;\n      await this.setGrid(this.state.grid);\n    } else if (this.state.grid[row][column].isWall) {\n      selectRemoveWall = true;\n      this.nodeRefs[row][column].current.classList.remove(wallClass);\n      let grid = this.state.grid;\n      grid[row][column].isWall = false;\n      if (isAnimated) this.visualizeRealTime(startNode, endNode);\n    } else if (selectRemoveWall) {\n      selectRemoveWall = false;\n      await this.setGrid(this.state.grid);\n    } else {\n      selectWall = true;\n      this.nodeRefs[row][column].current.classList.add(wallClass);\n      let grid = this.state.grid;\n      grid[row][column].isWall = true;\n      if (isAnimated) this.visualizeRealTime(startNode, endNode);\n    }\n  };\n  onMouseEnterAndLeave = (row, column) => {\n    //Just changing the class using refs.\n    if (selectStart) {\n      if (row !== endNode.row || column !== endNode.column) {\n        this.nodeRefs[row][column].current.classList.toggle(startNodeClass);\n        if (isAnimated) this.visualizeRealTime({ row, column }, endNode);\n      }\n    } else if (selectEnd) {\n      if (row !== startNode.row || column !== startNode.column) {\n        this.nodeRefs[row][column].current.classList.toggle(endNodeClass);\n        if (isAnimated) this.visualizeRealTime(startNode, { row, column });\n      }\n    } else if (selectWall) {\n      if (\n        (row !== endNode.row || column !== endNode.column) &&\n        (row !== startNode.row || column !== startNode.column)\n      ) {\n        this.nodeRefs[row][column].current.classList.add(wallClass);\n        let grid = this.state.grid;\n        grid[row][column].isWall = true;\n        if (isAnimated) this.visualizeRealTime(startNode, endNode);\n      }\n    } else if (selectRemoveWall) {\n      if (\n        (row !== endNode.row || column !== endNode.column) &&\n        (row !== startNode.row || column !== startNode.column)\n      ) {\n        this.nodeRefs[row][column].current.classList.remove(wallClass);\n        let grid = this.state.grid;\n        grid[row][column].isWall = false;\n        if (isAnimated) this.visualizeRealTime(startNode, endNode);\n      }\n    }\n  };\n  getRefs = () => {\n    let refs = [];\n    for (let i = 0; i < this.props.rows; i++) {\n      let rowRef = [];\n      for (let j = 0; j < this.props.columns; j++)\n        rowRef.push(React.createRef());\n      refs.push(rowRef);\n    }\n    return refs;\n  };\n  changeGridStartNode = (row, column, grid = this.state.grid) => {\n    grid[startNode.row][startNode.column].isStart = false;\n    startNode = { row, column };\n    grid[startNode.row][startNode.column].isStart = true;\n    this.nodeRefs[row][column].current.classList.add(startNodeClass);\n    this.setGrid(grid);\n  };\n  changeGridEndNode = (row, column, grid = this.state.grid) => {\n    grid[endNode.row][endNode.column].isEnd = false;\n    endNode = { row, column };\n    grid[endNode.row][endNode.column].isEnd = true;\n    this.nodeRefs[row][column].current.classList.add(endNodeClass);\n    this.setGrid(grid);\n  };\n  clearVisited = grid => {\n    this.props.setVisited(0);\n    this.props.setShortest(0);\n    grid.forEach(row =>\n      row.forEach(node => {\n        node.isShortestPath = false;\n        node.isVisited = false;\n        this.nodeRefs[node.row][node.col].current.classList.remove(\"visited\");\n        this.nodeRefs[node.row][node.col].current.classList.remove(\n          \"shortest-path\"\n        );\n        this.nodeRefs[node.row][node.col].current.classList.remove(\n          \"visited-anim\"\n        );\n        this.nodeRefs[node.row][node.col].current.classList.remove(\n          \"shortest-path-anim\"\n        );\n      })\n    );\n  };\n  clearGrid = () => {\n    isAnimated = false;\n    this.props.setVisited(0);\n    this.props.setShortest(0);\n    this.setGrid();\n  };\n  visualize = async () => {\n    this.props.setAnimating(true);\n    let grid = this.state.grid;\n    await this.setGrid(grid);\n    this.clearVisited(grid);\n    const response = await this.getResponseFromAlgo(grid, startNode, endNode);\n    const { visitedNodes, shortestPath } = response;\n    visitedNodes.shift();\n    shortestPath.shift();\n    shortestPath.pop();\n    if (visitedNodes.length === 0 && shortestPath.length === 0) {\n      this.props.setAnimating(false);\n      this.setGrid(grid);\n      return;\n    }\n    this.animate(visitedNodes, shortestPath, grid);\n  };\n  getResponseFromAlgo = (grid, sn, en) => {\n    let response;\n    switch (this.props.algo) {\n      case 0:\n        response = dijkstra(grid, sn, en, this.props.diag);\n        break;\n      case 1:\n        response = astar(\n          grid,\n          sn,\n          en,\n          this.props.heuristic[1],\n          this.props.diag\n        );\n        break;\n      case 2:\n        response = jumpPointSearch(grid, sn, en);\n        break;\n      default:\n        break;\n    }\n    return response;\n  };\n  animate = async (visitedNodes, shortestPath, grid) => {\n    let i = 0,\n      j = 0;\n    const animateVisitedNodes = async () => {\n      if (i === visitedNodes.length) {\n        if (shortestPath.length) requestAnimationFrame(animateShortestPath);\n        else {\n          isAnimated = true;\n          this.props.setAnimating(false);\n          this.setGrid(grid);\n        }\n        return;\n      }\n      const { row, col } = visitedNodes[i];\n      this.nodeRefs[row][col].current.classList.add(\"visited-anim\");\n      ++i;\n      this.props.setVisited(i);\n      requestAnimationFrame(animateVisitedNodes);\n    };\n    const animateShortestPath = () => {\n      if (j === shortestPath.length) {\n        isAnimated = true;\n        this.props.setAnimating(false);\n        this.setGrid(grid);\n        return;\n      }\n      const { row, col } = shortestPath[j];\n      this.nodeRefs[row][col].current.classList.add(\"shortest-path-anim\");\n      ++j;\n      this.props.setShortest(j);\n      requestAnimationFrame(animateShortestPath);\n    };\n    await requestAnimationFrame(animateVisitedNodes);\n  };\n\n  visualizeRealTime = (sn, en) => {\n    let grid = this.state.grid;\n    this.clearVisited(grid);\n    const { visitedNodes, shortestPath } = this.getResponseFromAlgo(\n      grid,\n      sn,\n      en\n    );\n    this.props.setVisited(visitedNodes.length);\n    this.props.setShortest(shortestPath.length);\n    visitedNodes.shift();\n    shortestPath.shift();\n    shortestPath.pop();\n    visitedNodes.forEach(node => {\n      this.nodeRefs[node.row][node.col].current.classList.add(\"visited\");\n    });\n    shortestPath.forEach(node => {\n      this.nodeRefs[node.row][node.col].current.classList.add(\"shortest-path\");\n    });\n    return { visitedNodes, shortestPath };\n  };\n\n  visualizeMaze = async () => {\n    await this.clearGrid();\n    let grid = this.state.grid;\n    if (!this.props.animMaze) {\n      this.getResponseFromMaze(grid, this.props.maze);\n      await this.setGrid(grid);\n    } else {\n      this.props.setAnimating(true);\n      await this.setGrid(grid);\n      const {\n        addedWalls,\n        removedWalls,\n        animAddedWalls\n      } = this.getResponseFromMaze(grid);\n      this.animateMaze(addedWalls, removedWalls, grid, animAddedWalls);\n    }\n  };\n\n  getResponseFromMaze = grid => {\n    switch (this.props.maze) {\n      case 0:\n        return kruskal(grid, this.props.rows, this.props.columns);\n      case 1:\n        return prim(grid, this.props.rows, this.props.columns);\n      case 2:\n        return recursiveDivision(grid, this.props.rows, this.props.columns);\n      default:\n        break;\n    }\n  };\n\n  animateMaze = (addedWalls, removedWalls, grid, animAddedWalls) => {\n    let i = 0;\n    const animateAddedWalls = () => {\n      if (i === addedWalls.length) {\n        if (removedWalls.length) requestAnimationFrame(animateRemovedWalls);\n        else {\n          this.props.setAnimating(false);\n          this.setGrid(grid);\n        }\n        return;\n      }\n      const { row, col } = addedWalls[i];\n      this.nodeRefs[row][col].current.classList.add(wallClass);\n      ++i;\n      requestAnimationFrame(animateAddedWalls);\n    };\n    let j = 0;\n    const animateRemovedWalls = () => {\n      if (j === removedWalls.length) {\n        this.props.setAnimating(false);\n        this.setGrid(grid);\n        return;\n      }\n      const { row, col } = removedWalls[j];\n      this.nodeRefs[row][col].current.classList.remove(wallClass);\n      ++j;\n      requestAnimationFrame(animateRemovedWalls);\n    };\n    const showAddedWalls = () => {\n      addedWalls.forEach(node =>\n        this.nodeRefs[node.row][node.col].current.classList.add(wallClass)\n      );\n    };\n    if (animAddedWalls) {\n      requestAnimationFrame(animateAddedWalls);\n    } else {\n      showAddedWalls();\n      requestAnimationFrame(animateRemovedWalls);\n    }\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    algo: state.algo,\n    diag: state.diag,\n    heuristic: state.heuristic,\n    maze: state.maze,\n    animMaze: state.animMaze,\n    anim: state.anim\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setAnimating, setVisited, setShortest },\n  null,\n  {\n    forwardRef: true\n  }\n)(TGrid);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}